{"version":3,"sources":["webpack://Keylani/webpack/universalModuleDefinition","webpack://Keylani/webpack/bootstrap","webpack://Keylani/./src/keylani.interface.js","webpack://Keylani/./src/keylani.globals.js","webpack://Keylani/./src/keylani.helpers.js"],"names":["Globals","require","__isValidateOpts","__readKeys","__addToBindings","__readOnlyKeys","DOMinterface","listen","opts","__KEYLANI_SETTINGS__","hasRun","state","matchCount","combo","codes","keycodes","window","addEventListener","DEV","console","error","brand","mainDevColors","info","sndDevColors","bind","key","binding","label","when","map","bindings","Object","prototype","toString","call","includes","nBindings","JSON","parse","stringify","getAllBindings","__KEYLANI_BINDINGS__","Keylani","module","exports","keybindingAttr","stateTimeout","maxKeyLength","__loudText","event","pressed","isExistingBind","__updateStateByCombo","__isSpecialCase","__resetState","setInterval","length","isActive","__cancelEvent","__keyMatchDone","code","keyCode","pressedCount","newBinding","replace","__verifyKeyNames","__getMaxLength","split","keyLength","ev","preventDefault","stopPropagation","list","specialCaseChars","indexOf","actualBind","eventProps","result","setTimeout","keys","control","ctrl","alt","shift","esc","enter","tab","capslock","actualKey","toLowerCase","k","join","obj","defineProperty","writable","enumerable","configurable"],"mappings":"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","file":"keylani.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Keylani\"] = factory();\n\telse\n\t\troot[\"Keylani\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*!\n * @name Keylani\n * (c) 2019 Verdexdesign - An open source Org by Simao Nziaka <sdnziaka@gmail.com>\n * @license MIT\n */\n\n/* global MINIMAL_BUILD, DEV */\n\nconst Globals = require('./keylani.globals');\nconst {__isValidateOpts, __readKeys, __addToBindings, __readOnlyKeys} = require('./keylani.helpers');\nconst DOMinterface = !MINIMAL_BUILD && require('./keylani.dom');\n\n/**\n * @description Listen for all key presses for the key bindings added using Keylani\n * @param {object} opts Options passed to Keylani\n * @example\n * <!-- Key bindings added on the DOM -->\n * <a href=\"#top\" data-keybind=\"t:callThisOne\" data-keyshow=\"false\">Top</a>\n * <button data-keybind=\"b:callThisTwo\" data-keyshow=\"true\" data-keylabel=\"Triggered the button click by a key press\">Click here!</button>\n *\n * @example\n * // javascript\n *\n * // Below are the required option values for Keylani's Grande build\n * Keylani.listen({\n *   // 'style' ecan be an object with CSS or a string of a classname\n *   style: { color: 'pink', fontSize: '13px' } or 'key-class',\n *   loud: true, // show the loud panel\n *   keyshow: true // show keys by DOM added binds by default\n * });\n *\n * // listen witll all possible 'options' for Keylani's Grande build\n * Keylani.listen({\n *\t // 'style' ecan be an object with CSS or a string of a classname\n *\t style: { color: 'pink', fontSize: '13px' } or 'key-class',\n *\t loud: true, // show the loud panel\n *\t keyshow: true, // show keys by DOM added binds by default\n *\t loudTimer: 3500, // how long does the loud panel stays on screen\n *\t showLoudData: true // shows data from the key press\n * });\n *\n * // Nano build 'listen' does not read 'options'\n * Keylani.listen();\n *\n * // The multiple Keylani.listen calls here are for example only.\n * // Keylani.listen only runs once. The calls do not overwrite each other.\n *\n * // Global keybind functions on the 'window' object\n * function callThisOne() {...}\n * function callThisTwo() {...}\n */\nfunction listen(opts) {\n\tif(!Globals.__KEYLANI_SETTINGS__.hasRun && __isValidateOpts(opts)) {\n\t\tif(!MINIMAL_BUILD) {\n\t\t\tDOMinterface.__addLoudPanel(opts);\n\t\t\tDOMinterface.__listenDOM(opts);\n\t\t}\n\n\t\tconst state = {\n\t\t\tmatchCount: 0,\n\t\t\tcombo: '',\n\t\t\tcodes: '',\n\t\t\tkeycodes: ''\n\t\t};\n\n\t\twindow.addEventListener('keydown', __readKeys(opts, state));\n\t\t// run only once\n\t\tGlobals.__KEYLANI_SETTINGS__.hasRun = true;\n\t} else if(DEV) {\n\t\tconsole.error(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.mainDevColors,\n\t\t\t'Invalid options object.'\n\t\t);\n\t\tconsole.info(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.sndDevColors,\n\t\t\t`'listen' options param should be an object with the following fields:\n\t\t{\n\t\t\tstyle: string|object, // required\n\t\t\tloud: boolean, // required\n\t\t\tkeyshow: boolean, // required\n\t\t\tloudTimer: number, // optional\n\t\t\tshowLoudData: boolean, // optional\n\t\t}`);\n\t\tconsole.info(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.sndDevColors,\n\t\t\t'See docs for more: https://verdebydesign.github.io/keylani2/global.html#listen'\n\t\t);\n\t}\n}\n\n/**\n * @description Reads a string containing the key or keys separated by '+' to bind to a callback function.\n * The callback takes the key read as an argument for use when the callback is run.\n * @param {string} key The key or keys separated by '+' to listen for\n * @param {function} callback The function to run on success. Format (done) => {}\n * @param {string} label The description of the key binding\n * @param {boolean} when A boolean that indicates when to run a callback function when a key is pressed\n * @example\n * // one key\n * Keylani.bind('h', () => { alert('Hello world!'); }, 'Hello World example!');\n *\n * // a combo of keys\n * Keylani.bind('a + b', () => { alert('Hello world from a combo'); });\n *\n * // theoretically you can have as much keys as possible\n * Keylani.bind('a + b + c + d + e', () => { alert('Hello world from a long combo'); });\n */\nfunction bind(key, binding, label = '', when = true) {\n\tif(typeof key === 'string' && typeof binding === 'function' && typeof label === 'string' && typeof when === 'boolean') {\n\t\t__addToBindings(key, binding, label, when);\n\t\treturn 1;\n\t} else if(DEV) {\n\t\tconsole.error(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.mainDevColors,\n\t\t\t'\\'bind\\' must have the following params of the following types: '\n\t\t);\n\t\tconsole.info(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.sndDevColors,\n\t\t\t'`Keylani.bind(key: string, binding: function, label: string, when: boolean)`'\n\t\t);\n\t\tconsole.info(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.sndDevColors,\n\t\t\t'See docs for more: https://verdebydesign.github.io/keylani2/global.html#bind'\n\t\t);\n\n\t\treturn 0;\n\t}\n}\n\n/**\n * @description A (key, value) map of bindings, reads an object of keys, their respective callback functions and more data.\n * 'map' is just a different way to write a bunch of bind calls; Its objective is to be clean and minimal, to group keys that\n * might be related to each other.\n * @param {object} bindings An object of key bindings\n * @example\n * let isDoneLoading = ...;\n * let allowThisKey = ...;\n *\n * Keylani.map({\n *  'q+w': {\n *    bind: callA,\n *    label: 'Combo \"h+e+l+l+o\" bound from Keylani.map',\n *    when: isDoneLoading\n *  },\n * 'r+3': {\n *    bind: callA,\n *    label: 'Combo \"r+3\" bound from Keylani.map',\n *    when: allowThisKey\n *  }\n * });\n */\nfunction map(bindings) {\n\tif(Object.prototype.toString.call(bindings).includes('Object')) {\n\t\tlet nBindings = JSON.parse(JSON.stringify(bindings));\n\t\tfor(let binding in nBindings) {\n\t\t\tif('bind' in bindings[binding] && 'label' in bindings[binding] && 'when' in bindings[binding]) {\n\t\t\t\tbind(binding, bindings[binding].bind, bindings[binding].label, bindings[binding].when);\n\t\t\t}\n\t\t}\n\t} else if(DEV) {\n\t\tconsole.error(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.mainDevColors,\n\t\t\t'Invalid bindings object.'\n\t\t);\n\t\tconsole.info(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.sndDevColors,\n\t\t\t`'map' bindings param should be an object of the following model:\n\t\t{\n\t\t\t[key]: string: {\n\t\t\t\tbind: function,\n\t\t\t\tlabel: string,\n\t\t\t\twhen: boolean\n\t\t\t}\n\t\t}`);\n\t\tconsole.info(\n\t\t\tGlobals.__KEYLANI_SETTINGS__.brand,\n\t\t\tGlobals.__KEYLANI_SETTINGS__.sndDevColors,\n\t\t\t'See docs for more: https://verdebydesign.github.io/keylani2/global.html#map'\n\t\t);\n\t}\n}\n\n/**\n * @description Get all added key bindings with data about each bind\n * @returns An object containing all the key bindings added using Keylani\n * @example\n * `{ a: { key: 'a', label: '...', pressed: 2 }, 'b+2': { key: 'b+2', label: '...', pressed: 11 } }`\n */\nfunction getAllBindings() {\n\treturn Globals.__KEYLANI_BINDINGS__;\n}\n\nconst Keylani = { listen, bind, map, getAllBindings };\n__readOnlyKeys(Keylani);\n\nmodule.exports = Keylani;\n","/* global MINIMAL_BUILD, DEV */\n\nconst __KEYLANI_BINDINGS__ = {};\n\nconst __KEYLANI_SETTINGS__ = {\n\tkeybindingAttr: '[data-keybind]',\n\tstateTimeout: 1500,\n\thasRun: false,\n\tmaxKeyLength: 0\n};\n\nif(!MINIMAL_BUILD) {\n\t__KEYLANI_SETTINGS__.loudClass = 'keylani-loud';\n\t__KEYLANI_SETTINGS__.loudDataClass = 'keylani-loud-data';\n\t__KEYLANI_SETTINGS__.loudCharClass = 'keylani-loud-char';\n\t__KEYLANI_SETTINGS__.paintClass = 'keylani-binding';\n\t__KEYLANI_SETTINGS__.defaultLoudTimer = 700;\n}\n\nif(DEV) {\n\t__KEYLANI_SETTINGS__.brand = '%c Keylani ';\n\t__KEYLANI_SETTINGS__.mainDevColors = 'color: white; background: purple;';\n\t__KEYLANI_SETTINGS__.sndDevColors = 'color: black; background: #ead4e6;';\n}\n\nmodule.exports = { __KEYLANI_BINDINGS__, __KEYLANI_SETTINGS__ };\n","/*global MINIMAL_BUILD */\n\nconst Globals = require('./keylani.globals');\nconst __loudText = !MINIMAL_BUILD && require('./keylani.loud').__loudText;\n\nfunction __readKeys(opts, state) {\n\treturn event => {\n\t\tlet pressed = event.key;\n\t\tlet isExistingBind = Globals.__KEYLANI_BINDINGS__[pressed];\n\n\t\tstate.matchCount++;\n\n\t\t__updateStateByCombo(state, event, pressed);\n\n\t\tif(__isSpecialCase(pressed, Globals.__KEYLANI_BINDINGS__)) {\n\t\t\t__resetState(state);\n\t\t}\n\n\t\tsetInterval(() => {\n\t\t\tif(state.combo.length === 1) {\n\t\t\t\t__resetState(state);\n\t\t\t}\n\t\t}, Globals.__KEYLANI_SETTINGS__.stateTimeout);\n\n\t\tif(state.matchCount === 1 && isExistingBind && isExistingBind.isActive) {\n\t\t\t__cancelEvent(event);\n\n\t\t\t__keyMatchDone(pressed, isExistingBind, opts, {\n\t\t\t\tcode: state.code,\n\t\t\t\tkeyCode: state.keyCode,\n\t\t\t\tpressed: ++isExistingBind.pressed\n\t\t\t});\n\n\t\t\t__resetState(state);\n\t\t} if(Globals.__KEYLANI_BINDINGS__[state.combo] && Globals.__KEYLANI_BINDINGS__[state.combo].isActive) {\n\t\t\t__cancelEvent(event);\n\n\t\t\tlet pressedCount = ++Globals.__KEYLANI_BINDINGS__[state.combo].pressed;\n\n\t\t\t__keyMatchDone(state.combo, Globals.__KEYLANI_BINDINGS__[state.combo], opts, {\n\t\t\t\tcode: state.code,\n\t\t\t\tkeyCode: state.keyCode,\n\t\t\t\tpressed: pressedCount\n\t\t\t});\n\t\t\t__resetState(state);\n\t\t} else if(state.matchCount >= Globals.__KEYLANI_SETTINGS__.maxKeyLength) {\n\t\t\t__resetState(state);\n\t\t}\n\t};\n}\n\nfunction __isValidateOpts(opts) {\n\tif(!MINIMAL_BUILD) {\n\t\tlet requiredSettings = (\n\t\t\tObject.prototype.toString.call(opts).includes('Object')\n\t\t\t&& 'loud' in opts\n\t\t\t&& 'style' in opts\n\t\t\t&& 'keyshow' in opts\n\t\t);\n\n\t\t// optional settings\n\t\t// loudTimer - A timer to hide the loud panel - number\n\t\t// showLoudData - toggles showing extra data for the key press - boolean\n\n\t\treturn (\n\t\t\trequiredSettings\n\t\t\t&& (typeof opts.style === 'string' || Object.prototype.toString.call(opts.style).includes('Object'))\n\t\t\t&& typeof opts.loud === 'boolean'\n\t\t\t&& typeof opts.keyshow === 'boolean'\n\t\t);\n\t}\n}\n\nfunction __addToBindings(key, binding, label, when) {\n\tlet newBinding = {};\n\tkey = key.replace(/\\s/g, '');\n\tkey = __verifyKeyNames(key);\n\t__getMaxLength(key.split('+').length);\n\tnewBinding[key] = { key, binding, label, isActive: when, pressed: 0 };\n\tGlobals.__KEYLANI_BINDINGS__[key] = newBinding[key];\n}\n\nfunction __getMaxLength(keyLength) {\n\tGlobals.__KEYLANI_SETTINGS__.maxKeyLength\n\t\t= keyLength > Globals.__KEYLANI_SETTINGS__.maxKeyLength\n\t\t\t? keyLength\n\t\t\t: Globals.__KEYLANI_SETTINGS__.maxKeyLength;\n}\n\nfunction __cancelEvent(ev) {\n\tev.preventDefault();\n\tev.stopPropagation();\n}\n\nfunction __resetState(state) {\n\tstate.matchCount = 0;\n\tstate.combo = '';\n}\n\nfunction __updateStateByCombo(state, event, pressed) {\n\tif(state.combo.length) {\n\t\tstate.combo += `+${pressed}`;\n\t\tstate.code += `+${event.code}`;\n\t\tstate.keyCode += `+${event.keyCode}`;\n\t} else {\n\t\tstate.combo = pressed;\n\t\tstate.code = event.code;\n\t\tstate.keyCode = event.keyCode;\n\t}\n}\n\nfunction __isSpecialCase(key, list) {\n\tlet specialCaseChars = ['CapsLock', 'Enter', 'Shift'];\n\treturn (\n\t\tspecialCaseChars.indexOf(key) !== -1 && !list[key]\n\t);\n}\n\nfunction __keyMatchDone(key, actualBind, opts, eventProps) {\n\tlet binding = actualBind.binding;\n\tlet label = actualBind.label;\n\tlet result = {\n\t\tkey, label,\n\t\tcode: eventProps.code,\n\t\tkeyCode: eventProps.keyCode,\n\t\tpressed: eventProps.pressed\n\t};\n\n\tif(!MINIMAL_BUILD) {\n\t\teventProps.key = key;\n\t\teventProps.label = label;\n\t\teventProps.showLoudData = opts.showLoudData;\n\t\t__loudText(eventProps, opts.loudTimer);\n\t}\n\n\tif(typeof binding === 'function') {\n\t\tsetTimeout(() => {\n\t\t\tbinding(result);\n\t\t}, 500);\n\t}\n}\n\nfunction __verifyKeyNames(key) {\n\tlet keys = {\n\t\tcontrol: 'Control',\n\t\tctrl: 'Control',\n\t\talt: 'Alt',\n\t\tshift: 'Shift',\n\t\tesc: 'Esc',\n\t\tenter: 'Enter',\n\t\ttab: 'Tab',\n\t\tcapslock: 'CapsLock'\n\t};\n\n\tlet combo = key.split('+');\n\tlet actualKey = keys[key.toLowerCase()];\n\n\tif(combo.length === 1) {\n\t\treturn actualKey ? actualKey : key;\n\t} else {\n\t\treturn combo.map(k => (keys[k.toLowerCase()] ? keys[k.toLowerCase()] : k)).join('+');\n\t}\n}\n\nfunction __readOnlyKeys(obj) {\n\tfor(let key in obj) {\n\t\tif(key) {\n\t\t\tObject.defineProperty(obj, key, {\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false\n\t\t\t});\n\t\t}\n\t}\n}\n\nmodule.exports = { __readKeys, __isValidateOpts, __addToBindings, __readOnlyKeys };\n"],"sourceRoot":""}